plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.10.0"
    id 'io.freefair.lombok' version "6.0.0-m2"
}

group 'com.gmail.jobstest18'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    selenideVersion = "6.12.4",
    junitVersion = "5.9.2",
    slf4jVersion = "2.0.0",
    fakerVersion = "1.0.2",
    hamcrestAllVersion = "1.3",
    assertjVersion = "3.22.0",
    ownerVersion = "1.0.12",
    restVersion = "5.3.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

compileJava {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.hamcrest:hamcrest-all:$hamcrestAllVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.aeonbits.owner:owner-java8:$ownerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:rest-assured:$restVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.11.2"

    )

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

test {
    useJUnitPlatform()
}
